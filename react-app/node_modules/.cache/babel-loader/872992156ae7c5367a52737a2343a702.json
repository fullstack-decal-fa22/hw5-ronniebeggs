{"ast":null,"code":"var _jsxFileName = \"/Users/rbeggs/school/cs198-99/hw5-ronniebeggs/react-app/src/Components/Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Post from \"./Post\";\nimport NewPost from \"./NewPost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Feed = () => {\n  _s();\n\n  // Un-comment the lines below to complete your solution\n  // ====================\n  const [postData, setPostData] = useState();\n\n  const getPostsData = () => {\n    axios.get('http://localhost:3002/posts') //THIS IS YOUR URL OF YOUR API\n    .then(data => setPostData([data])) //PROMISE API, THAT MEANS WHEN YOU GET THE DATA WHAT DO I DO WITH IT\n    .catch(error => console.log(error)); //ERROR CATCHING IN CASE WE RECIEVE AN ERROR\n  };\n\n  useEffect(() => {\n    getPostsData();\n  }, []); // ====================\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    children: [postData && postData.map(d => /*#__PURE__*/_jsxDEV(Post, {\n      title: d.title,\n      body: d.body,\n      comments: d.comments,\n      id: d.id\n    }, d.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(NewPost, {\n      postFunction: getPostsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Feed, \"/yAuRnrT+Hpp++QLvFxBvHMeLow=\");\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/rbeggs/school/cs198-99/hw5-ronniebeggs/react-app/src/Components/Feed.js"],"names":["React","useState","useEffect","axios","Post","NewPost","Feed","postData","setPostData","getPostsData","get","then","data","catch","error","console","log","maxWidth","marginLeft","marginRight","map","d","title","body","comments","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB;AACA;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,EAAxC;;AAEA,QAAMQ,YAAY,GAAG,MAAM;AACzBN,IAAAA,KAAK,CACFO,GADH,CACO,6BADP,EACsC;AADtC,KAEGC,IAFH,CAESC,IAAD,IAAUJ,WAAW,CAAC,CAACI,IAAD,CAAD,CAF7B,EAEuC;AAFvC,KAGGC,KAHH,CAGUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHpB,EADyB,CAIiB;AAC3C,GALD;;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT,CAbiB,CAiBjB;;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,UAAU,EAAE,MAAjC;AAAyCC,MAAAA,WAAW,EAAE;AAAtD,KAAZ;AAAA,eAEIZ,QAAQ,IAAIA,QAAQ,CAACa,GAAT,CAAaC,CAAC,iBACxB,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEA,CAAC,CAACC,KAAf;AAAsB,MAAA,IAAI,EAAED,CAAC,CAACE,IAA9B;AAAoC,MAAA,QAAQ,EAAEF,CAAC,CAACG,QAAhD;AAA0D,MAAA,EAAE,EAAEH,CAAC,CAACI;AAAhE,OAAyEJ,CAAC,CAACI,EAA3E;AAAA;AAAA;AAAA;AAAA,YADU,CAFhB,eAOE,QAAC,OAAD;AAAS,MAAA,YAAY,EAAEhB;AAAvB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA/BD;;GAAMH,I;;KAAAA,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Post from \"./Post\";\nimport NewPost from \"./NewPost\";\n\nconst Feed = () => {\n  // Un-comment the lines below to complete your solution\n  // ====================\n\n  const [postData, setPostData] = useState();\n\n  const getPostsData = () => {\n    axios\n      .get('http://localhost:3002/posts') //THIS IS YOUR URL OF YOUR API\n      .then((data) => setPostData([data])) //PROMISE API, THAT MEANS WHEN YOU GET THE DATA WHAT DO I DO WITH IT\n      .catch((error) => console.log(error));  //ERROR CATCHING IN CASE WE RECIEVE AN ERROR\n  };\n\n  useEffect(() => {\n    getPostsData();\n  }, [])\n\n  // ====================\n\n  return (\n    <div style={{ maxWidth: '600px', marginLeft: 'auto', marginRight: 'auto'}}>\n      {\n        postData && postData.map(d =>\n          <Post title={d.title} body={d.body} comments={d.comments} id={d.id} key={d.id} />\n        )\n      }\n\n      <NewPost postFunction={getPostsData}/>\n    </div>\n  )\n\n}\n\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}